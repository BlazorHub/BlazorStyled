@page "/nested"

<Styled @bind-Classname="@nested">
    color: turquoise;
    & a {
    border-bottom: 1px solid currentColor;
    cursor:pointer;
    }
</Styled>

<Styled @bind-Classname="@paragraph">
    color: turquoise;
    header & {
    color: green;
    }
</Styled>

<Styled @bind-Classname="@hover">
    padding: 32px;
    background-color: hotpink;
    font-size: 24px;
    border-radius: 4px;
    &:hover {
    color: @color;
    }
</Styled>

<h1>Nested Selectors</h1>

<p>Sometimes it’s useful to nest selectors to target elements inside the current class. You can use <code>&</code> which will be replaced with the current class name:</p>

<div class="@nested">Some text. <a>A link with a bottom border.</a></div>

<PrettyCode CodeFile="_content/SampleCore/nested1.html" />

<p>Another example:</p>

<header>
    <p class="@paragraph">
        This is green since it's inside a header
    </p>
</header>
<p class="@paragraph">
    This is turquoise since it's not inside a header.
</p>

<PrettyCode CodeFile="_content/SampleCore/nested2.html" />

<h3>CSS pseudo classes</h3>

<p>Lastly, <code>&</code> is also useful for defining pseudo classes such as <code>:hover</code>:</p>

<div class="@hover">
    Hover to change color.
</div>

<PrettyCode CodeFile="_content/SampleCore/nested3.html" />

<h3>Alternate Syntax</h3>

<p>Depending on your preferred style, the above can also be achieved with:</p>

<PrettyCode CodeFile="_content/SampleCore/index1.html" />


@code {
    private string nested, paragraph, hover;
    private string color = "white";
}