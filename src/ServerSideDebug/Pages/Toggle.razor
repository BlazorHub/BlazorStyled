@inject IStyled Styled

<Styled @bind-Classname="@label">
    label: toggle-label;
    display: flex;
    align-items: center;
</Styled>

<Styled @bind-Classname="@toggle">
    label: toggle;
    position: relative;
    &:after {
        content: '☀️';
        font-size: 112.5%;
        position: absolute;
        top: 2px;
        left: 37px;
    }
    &:before {
        content: '🌙';
        font-size: 112.5%;
        position: absolute;
        top: 2px;
        left: 6px;
        z-index: 1;
    }
</Styled>

<Styled @bind-Classname="@input">
    label: input;
    position: absolute;
    left: 0;
    top: 0;
    z-index: 5;
    opacity: 0;
    cursor: pointer;
    &:hover + span:after {
        box-shadow: 0 2px 15px 0 rgba(0, 0, 0, 0.2);
    }
    &:checked + span {
        background: #4a5b90;
    }
    &:checked + span:after {
        transform: translate3d(32px, 0, 0);
    }
</Styled>

<Styled @bind-Classname="@slider">
    label: slider;
    position: relative;
    display: block;
    height: 32px;
    width: 64px;
    border-radius: 32px;
    transition: 0.25s ease-in-out;
    background: #3a9df8;
    box-shadow: 0 0 1px 1px rgba(0, 0, 0, 0.15);
    &:after {
        content: '';
        position: absolute;
        border-radius: 100%;
        top: 0;
        left: 0;
        z-index: 2;
        background: #fff;
        box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
        transition: 0.25s ease-in-out;
        width: 32px;
        height: 32px;
    }
</Styled>

<label for="mode" class="@label">
    <div class="@toggle">
        <input id="mode" class="@input" type="checkbox" aria-label="dark mode toggle" checked="@bChecked" @onchange="@OnChange" />
        <span class="@slider" />
    </div>
</label>

<Styled>
    body {
        background-color: {colors.background-color};
    }
</Styled>

<div>
    This is a test!
</div>

@code {
    private string toggle, input, slider, label;
    private bool bChecked = false;

    private void OnChange(UIChangeEventArgs e)
    {
        bChecked = !bChecked;

        if(bChecked)
        {
            //Setup light theme
            Styled.SetThemeValue("colors.background-color", "#011627");
        }
        else
        {
            //Setup dark theme
            Styled.SetThemeValue("colors.background-color", "#f0f0f0");
        }
        StateHasChanged();
    }
}